{"version":3,"sources":["constants.js","reducers/personList.js","views/Header/constants.js","views/Header/index.jsx","actions/PersonListActions.js","components/PersonList/index.jsx","views/SearchPage/index.jsx","components/PlayedWithPersonList/index.jsx","views/PersonDetail/index.jsx","views/HistoryPage/index.jsx","app.js","index.js"],"names":["PERSON_LIST_ADD_PERSON","initialState","viewedPersonList","checkIfExists","person","state","map","id","includes","routes","key","path","name","Header","pathname","this","props","location","react_default","a","createElement","className","route","isActive","classNames","Link","to","Component","withRouter","addPerson","type","PersonList","persons","PersonListActions","concat","onClick","React","connect","dispatch","bindActionCreators","GET_PERSON_LIST","gql","_templateObject","SearchPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onPersonsFetched","personList","setState","isLoading","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","client","event","_ref2","data","wrap","_context","prev","next","searchInput","current","value","preventDefault","abrupt","query","variables","PersonFilter","sent","allPersons","filter","species","length","stop","_x","_x2","apply","arguments","createRef","_this2","_this$state","console","log","react_apollo_browser_umd","react","placeholder","ref","required","autoFocus","components_PersonList","withApollo","checkArrayIncludesFilm","films","episode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","err","return","filterFilms","personId","filteredFilms","newArray","forEach","film","index","episodeId","push","filterBySequnce","characterList","characters","character","filterByHumans","PlayedWithPersonList","GET_PERSON_DETAIL","PersonDetail_templateObject","PersonDetail","fetchFilms","prevProps","Person","birthYear","gender","height","components_PlayedWithPersonList","objectSpread","Redirect","HistoryPage","store","createStore","action","newList","apolloClient","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","rootElement","document","getElementById","ReactDOM","render","es","BrowserRouter","basename","process","views_Header","Switch","Route","exact","component","routeProps","views_PersonDetail","assign"],"mappings":"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","file":"static/js/main.0d8be33c.chunk.js","sourcesContent":["export const PERSON_LIST_ADD_PERSON = \"PERSON_LIST_ADD_PERSON\";\n","import { PERSON_LIST_ADD_PERSON } from \"../constants\";\n\nconst initialState = {\n  viewedPersonList: []\n};\n\nconst checkIfExists = (person, state) => {\n  const idList = state.viewedPersonList.map(person => person.id);\n  return idList.includes(person.id) ? true : false;\n}\n\nexport default function personList(state = initialState, action) {\n  switch (action.type) {\n    case PERSON_LIST_ADD_PERSON:\n      const newList = checkIfExists(action.person, state)\n        ? null\n        : state.viewedPersonList.push(action.person);\n      return {\n        ...state,\n        ...newList\n      };\n    default:\n      return state;\n  }\n}\n","const routes = [\n  {\n    key: 0,\n    path: '/',\n    name: 'Search',\n  },\n  {\n    key: 1,\n    path: '/history',\n    name: 'History',\n  }\n];\n\nexport default routes;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport routes from './constants';\n\nimport './styles.css';\n\nclass Header extends Component {\n  render () {\n    const { pathname } = this.props.location;\n\n    return (\n      <header className=\"header\">\n        {routes.map(route => {\n          const isActive = pathname === route.path;\n\n          return (\n            <div key={route.key} className={classNames('route', { isActive })}>\n              <Link to={route.path}>{route.name}</Link>\n            </div>\n          )}\n        )}\n      </header>\n    )\n  }\n};\n\nexport default withRouter(Header);\n","import { PERSON_LIST_ADD_PERSON } from \"../constants\";\n\nexport function addPerson(person) {\n  return { type: PERSON_LIST_ADD_PERSON, person };\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport * as PersonListActions from \"../../actions/PersonListActions\";\nimport './styles.css';\n\nclass PersonList extends React.Component {\n  render() {\n    const { persons } = this.props;\n    const { addPerson } = this.props.PersonListActions;\n\n    return (\n      <ul>\n        {persons.map(person => (\n          <li key={person.id} className=\"person\">\n            <Link\n              to={{\n                pathname: `/person/${person.id}`,\n                state: { person }\n              }}\n              onClick={() => addPerson(person)}\n            >\n              {person.name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    PersonListActions: bindActionCreators(PersonListActions, dispatch)\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(PersonList);\n","import React, { Component, Fragment } from \"react\";\nimport { withApollo, ApolloConsumer } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nimport PersonList from '../../components/PersonList';\n\nconst GET_PERSON_LIST = gql`query ($PersonFilter: String!) {\n  allPersons(filter: {name_contains: $PersonFilter }) {\n    id\n    name\n    birthYear\n    gender\n    height\n    species(filter: {name: \"Human\"}) {\n      name\n    }\n  }\n}`;\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      personList: null,\n      isLoading: false,\n    };\n\n    this.searchInput = React.createRef();\n  }\n\n  onPersonsFetched = (personList) => {\n    this.setState({ personList, isLoading: false });\n  };\n\n  onSubmit = async (client, event) => {\n    if (this.searchInput.current.value) event.preventDefault();\n    else return;\n\n    this.setState({ isLoading: true });\n\n    const { data } = await client.query({\n      query: GET_PERSON_LIST,\n      variables: {\n        PersonFilter: this.searchInput.current.value,\n      }\n    });\n\n    const personList = data.allPersons.filter(person => person.species.length > 0);\n\n    this.onPersonsFetched(personList);\n  };\n\n  render() {\n    const { personList, isLoading } = this.state;\n    console.log(personList);\n\n    return (\n      <ApolloConsumer>\n        {client => (\n          <Fragment>\n            <h2>Enter a name:</h2>\n            <form>\n              <input\n                type=\"text\"\n                placeholder=\"Max Mustermann\"\n                ref={this.searchInput}\n                required\n                autoFocus\n              />\n              <br />\n              <button onClick={event => this.onSubmit(client, event)}>\n                Search\n              </button>\n            </form>\n            <br />\n            {isLoading && <p>Loading...</p>}\n            {personList && !isLoading && personList.length === 0 && <p>Nothing found :(</p>}\n            {personList && personList.length > 0 && !isLoading && (\n              <Fragment>\n                <h2>Here are results:</h2>\n                <PersonList persons={personList} />\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n      </ApolloConsumer>\n    );\n  }\n}\n\nexport default withApollo(SearchPage);\n","import React from \"react\";\n\nimport PersonList from '../../components/PersonList';\n\n// Step 2:\n// filter exclude inconsistent films\nconst filterBySequnce = (films) => {\n  let newArray = [];\n  films.forEach((film, index, films) => {\n    if (!index) return;\n    if (film.episodeId - films[index - 1].episodeId !== 1) return;\n      else if (newArray.includes(films[index - 1])) newArray.push(film)\n        else newArray.push(films[index - 1], film);\n  });\n  return newArray;\n}\n\n// custom Array.prototpye.includes() method\nconst checkArrayIncludesFilm = (films, episode) => {\n  for (let film of films) {\n    if (film.id === episode.id) return true;\n  }\n  return false;\n}\n\n// Step 3:\n// filter characters in films\nconst filterByHumans = (personId, films) => {\n  let characterList = [];\n\n  films.forEach((film, index) => {\n    if (!index) return;\n\n    film.characters.forEach(character => {\n      if (!character.species.length) return;\n\n      if (checkArrayIncludesFilm(character.films, film)\n        && checkArrayIncludesFilm(character.films, films[index - 1])\n        && character.id !== personId) {\n        if (!characterList.includes(character)) characterList.push(character);\n      }\n    })\n  })\n\n  return characterList;\n};\n\n// Step 1:\n// filter exclude inconsistent films & exclude persons with only one film\nconst filterFilms = (personId, films) => {\n  const filteredFilms = filterBySequnce(films);\n  if (films.length < 2 || !filteredFilms.length) return false;\n    else return filterByHumans(personId, filteredFilms);\n}\n\nconst PlayedWithPersonList = ({ person }) => {\n  if (!person.films) return null;\n\n  const personList = filterFilms(person.id, person.films);\n\n  if (personList && personList.length > 0) {\n    return (\n      <div>\n        <h2>Humans who played with this person in at least two consecutive movies:</h2>\n        <PersonList persons={personList} />\n      </div>\n    );\n  }\n  else return null;\n};\n\nexport default PlayedWithPersonList;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router\";\nimport gql from \"graphql-tag\";\n\nimport PlayedWithPersonList from '../../components/PlayedWithPersonList';\n\nconst GET_PERSON_DETAIL = gql`query ($PersonFilter: ID!) {\n  Person(id: $PersonFilter) {\n    films(orderBy: episodeId_ASC) {\n      id\n      episodeId\n      characters {\n        id\n        name\n        birthYear\n        gender\n        height\n        species(filter: {name:\"Human\"}) {\n          name\n        }\n        films {\n          id\n        }\n      }\n    }\n  }\n}`;\n\nclass PersonDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      films: [],\n      isLoading: false,\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.films.length) this.fetchFilms(this.props.location.state.person, this.props.client);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { id: prevPersonId } = prevProps.location.state.person;\n    const { id: currentPersonId } =  this.props.location.state.person;\n\n    if (prevPersonId !== currentPersonId) {\n      this.setState({ films: [] });\n      this.fetchFilms(this.props.location.state.person, this.props.client);\n    }\n  }\n\n  async fetchFilms(person, client) {\n    this.setState({ isLoading: true });\n\n    const { data } = await client.query({\n      query: GET_PERSON_DETAIL,\n      variables: {\n        PersonFilter: person.id,\n      }\n    });\n\n    this.setState({ films: data.Person.films, isLoading: false });\n  }\n\n  render() {\n    if (this.props.location && this.props.location.state) {\n      const { person } = this.props.location.state;\n      const { films, isLoading } = this.state;\n\n      return (\n          <div>\n            <h2>{person.name}</h2>\n            {person.birthYear && <p>birth year: {person.birthYear}</p>}\n            {person.gender && <p>gender: {person.gender}</p>}\n            {person.height && <p>height: {person.height}</p>}\n            {isLoading && <p>Loading...</p>}\n            {films.length > 0 && <PlayedWithPersonList person={{ ...person, ...{ films } }} />}\n          </div>\n      );\n    } else return <Redirect to=\"/\" />;\n  }\n};\n\nexport default PersonDetail;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport PersonList from '../../components/PersonList';\n\nclass HistoryPage extends  Component {\n  render() {\n    const { viewedPersonList } = this.props;\n\n    return (\n      <div>\n        {viewedPersonList && viewedPersonList.length > 0\n          ? (\n            <Fragment>\n              <h2>Persons you had already viewed:</h2>\n               <PersonList persons={viewedPersonList} />\n            </Fragment>\n          )\n          : (\n            <Fragment>\n              <h2>You hadn't seen anybody yet.</h2>\n              <Link to=\"/\">\n                <p>Get back to search page</p>\n              </Link>\n            </Fragment>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    viewedPersonList: state.viewedPersonList,\n  };\n}\n\nexport default connect(mapStateToProps)(HistoryPage);\n","import React from \"react\";\n\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Route, Switch } from \"react-router\";\nimport { createStore } from \"redux\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport personList from \"./reducers/personList\";\nimport Header from \"./views/Header\";\nimport SearchPage from \"./views/SearchPage\";\nimport PersonDetail from \"./views/PersonDetail\";\nimport HistoryPage from \"./views/HistoryPage\";\n\nconst store = createStore(personList);\n\nconst apolloClient = new ApolloClient({\n  link: new HttpLink({\n    uri: \"https://api.graphcms.com/simple/v1/swapi\"\n  }),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={apolloClient}>\n      <ReduxProvider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header />\n            <div className=\"Content\">\n              <Switch>\n                <Route exact path=\"/\" component={SearchPage} />\n                <Route exact path=\"/person/:id\" render={routeProps => <PersonDetail {...routeProps} client={apolloClient} />} />\n                <Route exact path=\"/history\" component={HistoryPage} />\n              </Switch>\n            </div>\n          </div>\n        </BrowserRouter>\n      </ReduxProvider>\n    </ApolloProvider>\n  );\n}\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./app\";\n\nimport './styles.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}